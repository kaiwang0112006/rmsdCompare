    def getRMSDmatrixparallel(self,np):
        print ('Creating %d process' % np)
        tasks = multiprocessing.JoinableQueue()
        results = multiprocessing.Queue()
        consumers = [getRMSDmatrixConsumer(tasks, results) for i in range(np)]
        for w in consumers:
             w.start()
        
        num_jobs = len(self.reacts)
        
        for indexpdt, mp in enumerate(self.products):
            for indexreact, mr in enumerate(self.reacts):
                tasks.put(getRMSDmatrixTask(mp, mr))
                
        # Add a poison pill for each consumer
        for i in range(num_consumers):
            tasks.put(None)
        # Wait for all of the tasks to finish
        tasks.join()
        
        self.rmatrix[pdtname] = {'acid':{},'amines':{}}
        for indexpdt, mp in enumerate(self.products):
            for indexreact, mr in enumerate(self.reacts):
                pdtname,reactname,rmsd = results.get()
                if not pdtname in self.rmatrix:
                    self.rmatrix[pdtname] = {'acid':{},'amines':{}}
                if 'acid' in reactname:
                    self.rmatrix[pdtname]['acid'][reactname] = rmsd
                elif 'amines' in reactname:
                    self.rmatrix[pdtname]['amines'][reactname] = rmsd
        print "multiprocessing done!"